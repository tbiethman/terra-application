{"version":3,"sources":["webpack:///./lib/terra-dev-site/app/how-to.3/consume-terra-application.0.app.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gMAYMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,cALS,UAKT,OAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,oCADR,oCAGA,oFAAiE,4BAAYC,WAAW,KAAvB,qBAAjE,4CAA2K,4BAAYA,WAAW,KAAvB,qBAA3K,yBAAkQ,4BAAYA,WAAW,KAAvB,kBAAlQ,gBAA6U,4BAAYA,WAAW,KAAvB,gBAA7U,KACA,yBAAK,0BAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,4EAQL,+CAA4B,4BAAYA,WAAW,KAAvB,qBAA5B,iBAA2G,4BAAYA,WAAW,KAAvB,gBAA3G,wFAA4P,4BAAYA,WAAW,KAAvB,qBAA5P,sBAAgV,uBAAGA,WAAW,KAAQ,CAClW,KAAQ,uEADoU,iCAAhV,gEAGA,gCACE,mBAAGA,WAAW,cAAd,oDAAgF,4BAAYA,WAAW,KAAvB,iBAAhF,eAAyJ,uBAAGA,WAAW,KAAQ,CAC3K,KAAQ,+EAD6I,yBAAzJ,OAQNJ,EAAWK,gBAAiB","file":"66-4fd69515a676d365acc5.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"how-to-consume-terra-application\"\n    }}>{`How To Consume Terra Application`}</h1>\n    <p>{`Due to the large number of Context-based APIs provided by `}<inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{`, the recommended strategy for consuming `}<inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{` is to define it as a `}<inlineCode parentName=\"p\">{`peerDependency`}</inlineCode>{` within your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"peerDependencies\": {\n    \"terra-application\": \"^x.x.x\"\n  }\n}\n`}</code></pre>\n    <p>{`Packages that define `}<inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{` within their `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` out of necessity must take extra precaution to ensure that only a single version of `}<inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{` is installed. The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cerner/duplicate-package-checker-webpack-plugin\"\n      }}>{`DuplicatePackageCheckerPlugin`}</a>{` should be used to detect duplicated packages at build time.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The DuplicatePackageCheckerPlugin is included in `}<inlineCode parentName=\"p\">{`terra-toolkit`}</inlineCode>{`'s provided `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/cerner/terra-toolkit-boneyard/blob/main/docs/Webpack.md\"\n        }}>{`webpack configuration`}</a>{`.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}