{"version":3,"sources":["webpack:///./lib/terra-dev-site/doc/application/reference.1/contexts/ApplicationIntlContext.doc.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"iMAYMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,cALS,UAKT,OAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,0BADR,0BAGA,kIACa,uBAAGC,WAAW,KAAQ,CAC/B,KAAQ,wGADC,iCADb,6BAIA,mBAAQ,CACN,GAAM,iBADR,iBAGA,gJACwC,uBAAGA,WAAW,KAAQ,CAC1D,KAAQ,6EAD4B,cADxC,KAIA,8BAAW,4BAAYA,WAAW,KAAvB,aAAX,+BAAgG,4BAAYA,WAAW,KAAvB,cAAhG,mCACA,yBAAK,0BAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+CAQTJ,EAAWK,gBAAiB","file":"78-281de2028688d57a9f24.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"applicationintlcontext\"\n    }}>{`ApplicationIntlContext`}</h1>\n    <p>{`The ApplicationIntContext defines an interface for access to the framework's i18n APIs.\nPlease see the `}<a parentName=\"p\" {...{\n        \"href\": \"/tbiethman/terra-application/components/terra-application/application/how-to/use-translated-strings\"\n      }}>{`How to Use Translated Strings`}</a>{` page for usage examples.`}</p>\n    <h2 {...{\n      \"id\": \"context-value\"\n    }}>{`Context Value`}</h2>\n    <p>{`The value of the ApplicationIntlContext is an object containing i18n APIs.\nPlease review the IntlShape as defined by `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/formatjs/react-intl/blob/master/docs/API.md#intlshape\"\n      }}>{`react-intl`}</a>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`intlShape`}</inlineCode>{` value can be imported from `}<inlineCode parentName=\"p\">{`react-intl`}</inlineCode>{` as needed for prop validation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { intlShape } from 'react-intl';\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}