// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApplicationErrorBoundary Snapshots should render error view when an error is detected 1`] = `
<InjectIntl(ApplicationErrorBoundary)
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <ApplicationErrorBoundary
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <ErrorComponent>
      <div />
    </ErrorComponent>
  </ApplicationErrorBoundary>
</InjectIntl(ApplicationErrorBoundary)>
`;

exports[`ApplicationErrorBoundary Snapshots should render error view when an error is detected 2`] = `
<InjectIntl(ApplicationErrorBoundary)
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <ApplicationErrorBoundary
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <StatusView
      buttonAttrs={Array []}
      isAlignedTop={false}
      isGlyphHidden={false}
      message="terraApplication.errorBoundary.defaultErrorMessage"
      variant="error"
    >
      <div
        className="outer-view"
      >
        <div
          className="top-space"
        />
        <div
          className="inner-view"
        >
          <div
            className="glyph"
          >
            <svg
              className="error"
            />
          </div>
          <p
            className="title"
          >
            <FormattedMessage
              id="Terra.status-view.error"
              values={Object {}}
            >
              <span>
                Terra.status-view.error
              </span>
            </FormattedMessage>
          </p>
          <div
            className="divider"
          >
            <Divider>
              <hr
                aria-hidden="true"
                className="divider"
              />
            </Divider>
          </div>
          <p
            className="message"
          >
            terraApplication.errorBoundary.defaultErrorMessage
          </p>
        </div>
        <div
          className="bottom-space"
        />
      </div>
    </StatusView>
  </ApplicationErrorBoundary>
</InjectIntl(ApplicationErrorBoundary)>
`;

exports[`ApplicationErrorBoundary Snapshots should render error view when an error is detected 3`] = `
<InjectIntl(ApplicationErrorBoundary)
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <ApplicationErrorBoundary
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": null,
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <StatusView
      buttonAttrs={Array []}
      isAlignedTop={false}
      isGlyphHidden={false}
      message="terraApplication.errorBoundary.defaultErrorMessage"
      variant="error"
    >
      <div
        className="outer-view"
      >
        <div
          className="top-space"
        />
        <div
          className="inner-view"
        >
          <div
            className="glyph"
          >
            <svg
              className="error"
            />
          </div>
          <p
            className="title"
          >
            <FormattedMessage
              id="Terra.status-view.error"
              values={Object {}}
            >
              <span>
                Terra.status-view.error
              </span>
            </FormattedMessage>
          </p>
          <div
            className="divider"
          >
            <Divider>
              <hr
                aria-hidden="true"
                className="divider"
              />
            </Divider>
          </div>
          <p
            className="message"
          >
            terraApplication.errorBoundary.defaultErrorMessage
          </p>
        </div>
        <div
          className="bottom-space"
        />
      </div>
    </StatusView>
  </ApplicationErrorBoundary>
</InjectIntl(ApplicationErrorBoundary)>
`;

exports[`ApplicationErrorBoundary Snapshots should render with children 1`] = `
<ApplicationErrorBoundary
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div>
    Test child
  </div>
</ApplicationErrorBoundary>
`;

exports[`ApplicationErrorBoundary Snapshots should render with minimal props 1`] = `
<ApplicationErrorBoundary
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
/>
`;
