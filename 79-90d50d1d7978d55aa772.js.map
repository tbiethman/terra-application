{"version":3,"sources":["webpack:///./node_modules/terra-disclosure-manager/lib/DisclosureManagerContext.js","webpack:///./lib/terra-dev-site/doc/application/reference.1/contexts/DisclosureManagerContext.doc.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"79-90d50d1d7978d55aa772.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\n\nconst DisclosureManagerContext = React.createContext();\n\nexport default DisclosureManagerContext;\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport ContextDefinition from 'terra-disclosure-manager/lib/DisclosureManagerContext?dev-site-codeblock';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"disclosuremanagercontext\"\n    }}>{`DisclosureManagerContext`}</h1>\n    <p>{`The DisclosureManagerContext defines an communication interface between the ModalManager/SlidePanelManager and application content.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: A DisclosureManagerContext.Provider is rendered by the ModalManager and SlidePanelManager. Any components rendered within\nthose managers (or disclosed by them) can access a DisclosureManagerContext value without rendering additional providers.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { DisclosureManagerContext } from 'terra-application/lib/disclosure-manager';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"context-value\"\n    }}>{`Context Value`}</h2>\n    <ContextDefinition mdxType=\"ContextDefinition\" />\n    <h2 {...{\n      \"id\": \"details\"\n    }}>{`Details`}</h2>\n    <h3 {...{\n      \"id\": \"disclosuremanagerheaderadapter\"\n    }}>{`DisclosureManagerHeaderAdapter`}</h3>\n    <p>{`Implementations of the DisclosureManager must render a header containing controls for the various disclosure management actions\n(close, back, maximize/minimize, etc.). The DisclosureManagerHeaderAdapter can be rendered by the disclosed content to inject\ntheir own component-specific contents into that header.`}</p>\n    <p><inlineCode parentName=\"p\">{`DisclosureManagerHeaderAdapter`}</inlineCode>{` Props:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`title`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A string to render as the header's title.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`collapsibleMenuView`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A CollapsibleMenuView component to render within the header.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { DisclosureManagerContext, DisclosureManagerHeaderAdapter } from 'terra-application/lib/disclosure-manager';\nimport CollapsibleMenuView from 'terra-collapsible-menu-view';\n\nconst MyDisclosureComponent = () => {\n  const disclosureManager = React.useContext(DisclosureManagerContext);\n\n  return (\n    <React.Fragment>\n      <DisclosureManagerHeaderAdapter\n        title=\"My Disclosure Component\"\n        collapsibleMenuView={<CollapsibleMenuView ... />}\n      />\n      <Button\n        text=\"Close Modal\"\n        onClick={() => {\n          disclosureManager.closeDisclosure();\n        }}\n      />\n    </React.Fragment>\n  );\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"children\"\n    }}>{`Children`}</h3>\n    <p>{`The DisclosureManagerDelegate provided to the child components contains a `}<inlineCode parentName=\"p\">{`disclose`}</inlineCode>{` function. This `}<inlineCode parentName=\"p\">{`disclose`}</inlineCode>{` function\nvalidates the disclosure type with which it is provided against the set of supported disclosure types given to the DisclosureManager\nas a prop. If the provided type is not supported, and if the DisclosureManager detects another DisclosureManager higher in the\ncomponent hierarchy, the DisclosureManager will call the disclose function provided by that parent DisclosureManager instance.`}</p>\n    <p>{`If the type is supported, the DisclosureManager will check the currently disclosed component's state to ensure it can be replaced.\nIf the disclosure is denied, then `}<inlineCode parentName=\"p\">{`disclose`}</inlineCode>{` returns a rejected Promise. If the disclosure is allowed, then a resolved Promise is returned.\nThis Promise will be resolved with an Object containing functions and Promises that can be used to manipulate the disclosure, if necessary.\nIncluded are `}<inlineCode parentName=\"p\">{`dismissDisclosure`}</inlineCode>{`, a function that will dismiss the disclosed content, and `}<inlineCode parentName=\"p\">{`afterDismiss`}</inlineCode>{`, a deferred Promise that will be\nresolved when the disclosed content is dismissed by any means. Alternatively, if the additional logic isn't needed, the returned Promise\ncan be completely ignored.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`disclosureManager.disclose({\n  preferredType: 'disclosure-type',\n  size: 'large',\n  content: {\n    key: 'my-disclosed-content',\n    component: <DisclosedContent />,\n  }\n}).then({ dismissDisclosure, afterDismiss } => {\n  this.myContentIsDisclosed = true;\n\n  // This function can be cached and triggered as needed.\n  this.myDismissFunction = dismissDisclosure;\n\n  afterDismiss.then(() => {\n    // The afterDismiss will resolve when the content is dismissed, allowing for\n    // cleanup of local state as needed.\n    this.myContentIsDisclosed = false;\n\n    // If the dismissDisclosure function was cached, make sure it gets cleaned up.\n    this.myDismissFunction = false;\n  })\n}).catch((e) => {\n  // If this function is executed, the disclosure has been denied. You can use this to\n  // clean up any state that may be reliant on the disclosure ocurring.\n})\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`disclose`}</inlineCode>{` Argument API:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`preferredType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The String describing the preferred disclosure type. This will be used to match the disclosure request to an appropriate DisclosureManager. Depending on the structuring of managers in a given component, the `}<inlineCode parentName=\"td\">{`preferredType`}</inlineCode>{` value may not be honored. If the provided `}<inlineCode parentName=\"td\">{`preferredType`}</inlineCode>{` is not supported by any present disclosure managers, the root disclosure manager will perform the disclosure using its own disclosure type, regardless of the `}<inlineCode parentName=\"td\">{`preferredType`}</inlineCode>{` value.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The String size desired for the disclosure. One of `}<inlineCode parentName=\"td\">{`tiny`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`small`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`medium`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`large`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`huge`}</inlineCode>{`, or `}<inlineCode parentName=\"td\">{`fullscreen`}</inlineCode>{`. The functional implementation of this size is determined by the rendering component. `}<inlineCode parentName=\"td\">{`size`}</inlineCode>{` should not be provided if `}<inlineCode parentName=\"td\">{`dimensions`}</inlineCode>{` are specified.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dimensions`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An Object containing explicit `}<inlineCode parentName=\"td\">{`height`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`width`}</inlineCode>{` values for the disclosure. These values may not be honored due to the disclosure type or the available viewport size. `}<inlineCode parentName=\"td\">{`dimensions`}</inlineCode>{` should not be provided if a `}<inlineCode parentName=\"td\">{`size`}</inlineCode>{` is specified.`}<br />{`Supported `}<inlineCode parentName=\"td\">{`height`}</inlineCode>{` values include: `}<inlineCode parentName=\"td\">{`'240'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'420'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'600'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'690'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'780'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'870'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'960'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1140'`}</inlineCode>{`.`}<br />{`Supported `}<inlineCode parentName=\"td\">{`width`}</inlineCode>{` values include: `}<inlineCode parentName=\"td\">{`'320'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'480'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'560'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'640'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'800'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'960'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1120'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1280'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1440'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1600'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1760'`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`'1920'`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`content`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`required`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An Object containing a key and a component describing the component to be disclosed. See the `}<inlineCode parentName=\"td\">{`content`}</inlineCode>{` API below.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><inlineCode parentName=\"p\">{`content`}</inlineCode>{` Object API:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`required`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A String key identifying the component to the DisclosureManager. This key must be unique amongst the set of all actively disclosed component keys.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`component`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`required`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A React element that will be disclosed.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"disclosure-content\"\n    }}>{`Disclosure Content`}</h3>\n    <p>{`In addition to a `}<inlineCode parentName=\"p\">{`disclose`}</inlineCode>{` function, a number of other functions are exposed to components rendered in the disclosure mechanism to manage various segments of the disclosure state. The included functions are:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`disclose`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to disclose another component. See above for argument API. The DisclosureManager implementation will determine how the next object will be disclosed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dismiss`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to remove itself from the disclosure stack. If the component is the only element in the disclosure stack, the disclosure is closed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`closeDisclosure`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to close the entire disclosure stack. This is generally integrated into face-up disclosure controls as a Close button or similar.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`goBack`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to remove itself from the disclosure stack. Functionally similar to `}<inlineCode parentName=\"td\">{`dismiss`}</inlineCode>{`, however `}<inlineCode parentName=\"td\">{`onBack`}</inlineCode>{` is only provided to components in the stack that have a previous sibling. This is generally integrated into face-up disclosure controls as a Back button or similar.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`maximize`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to maximize its presentation size. This is only provided if the component is not already maximized.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`minimize`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to minimize its presentation size. This is only provided if the component is currently maximized.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`requestFocus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to request focus from the disclosure in the event that the disclosure mechanism in use utilizes a focus trap. This can be integrated with the Popup and similar focus-stealing controls.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`releaseFocus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to release focus from itself and return it to the disclosure. This can be integrated with the Popup and similar focus-stealing controls.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`registerDismissCheck`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allows a component to register a function with the DisclosureManager that will be called before the component is dismissed. Calling this function will override the default implementation that checks for the presence of NavigationPrompts.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Each of these functions returns a Promise that can be used for chaining, if necessary.`}</p>\n    <h4 {...{\n      \"id\": \"a-note-on-registerdismisscheck\"\n    }}>{`A Note on `}<inlineCode parentName=\"h4\">{`registerDismissCheck`}</inlineCode></h4>\n    <p>{`By default, the DisclosureManager monitors its disclosed content for the presence of `}<a parentName=\"p\" {...{\n        \"href\": \"/terra-application/components/terra-application/application/reference/components/navigation-prompt\"\n      }}>{`NavigationPrompts`}</a>{`.\nThe user will be prompted if they attempt to close the dismiss the disclosure while NavigationPrompts are present.`}</p>\n    <p>{`If the modal content calls `}<inlineCode parentName=\"p\">{`registerDismissCheck`}</inlineCode>{` to add its own pre-dismissal logic, the default NavigationPrompt handling will be `}<strong parentName=\"p\">{`disabled`}</strong>{`.\nAny component that uses `}<inlineCode parentName=\"p\">{`registerDismissCheck`}</inlineCode>{` should check for the presence of NavigationPrompts (using a `}<a parentName=\"p\" {...{\n        \"href\": \"/terra-application/components/terra-application/application/reference/components/navigation-prompt-checkpoing\"\n      }}>{`NavigationPromptCheckpoint`}</a>{`)\nin addition to whatever custom logic is required.`}</p>\n    <p>{`Given this complexity, usage of the `}<inlineCode parentName=\"p\">{`registerDismissCheck`}</inlineCode>{` API is `}<strong parentName=\"p\">{`not recommended`}</strong>{`.`}</p>\n    <p>{`The function provided to `}<inlineCode parentName=\"p\">{`registerDismissCheck`}</inlineCode>{` must return a resolved or rejected Promise.\nIf the Promise is resolved, the component is guaranteed to be dismissed.\nIf cleanup logic needs to execute before the component is dismissed, it is a good idea to execute before returning the resolved Promise.\nIf a rejected Promise is returned, the component will not be dismissed.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}