(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{919:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var o=n(18),a=n.n(o),i=n(24),c=n.n(i),r=(n(0),n(281)),p={};function d(e){var t=e.components,n=c()(e,["components"]);return Object(r.mdx)("wrapper",a()({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"activebreakpointcontext"},"ActiveBreakpointContext"),Object(r.mdx)("p",null,"The ActiveBreakpointContext defines an interface for access to the framework's determined active breakpoint based on the current window size."),Object(r.mdx)("blockquote",null,Object(r.mdx)("p",{parentName:"blockquote"},"Note: An ActiveBreakpointContext.Provider is rendered by ",Object(r.mdx)("a",a()({parentName:"p"},{href:"/terra-application/application/terra-application/components/application-base"}),"ApplicationBase"),".\nAny components rendered within ApplicationBase can access an ActiveBreakpointContext value without rendering additional providers.")),Object(r.mdx)("h2",{id:"context-value"},"Context Value"),Object(r.mdx)("pre",null,Object(r.mdx)("code",a()({parentName:"pre"},{className:"language-jsx"}),"const contextShape = PropTypes.oneOf(['tiny', 'small', 'medium', 'large', 'huge', 'enormous']);\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=62-8355dac28355175f5d2c.js.map