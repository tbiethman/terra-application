{"version":3,"sources":["webpack:///./lib/terra-dev-site/app/utilities.2/Breakpoints.app.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"72-b2158ea6936ba891c946.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"breakpoints\"\n    }}>{`Breakpoints`}</h1>\n    <p><inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{` defines named sizes that correspond to ranges of viewport widths. It also provides a number of utilities\nthat can be used to detect and respond to breakpoint changes.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import breakpoints, { activeBreakpointForSize, isBreakpointActiveForSize } from 'terra-application/lib/breakpoints';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"breakpoints-1\"\n    }}><inlineCode parentName=\"h3\">{`breakpoints`}</inlineCode></h3>\n    <p>{`An object containing a mapping of named breakpoint values to their minimum width value.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Breakpoint Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Minimum Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Corresponding Media Query`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`tiny`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`@media screen and (min-width: 0px)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Active from viewport width 0px and up`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`small`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`544px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`@media screen and (min-width: 544px)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Active from viewport width 544px and up`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`medium`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`768px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`@media screen and (min-width: 768px)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Active from viewport width 768px and up`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`large`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`992px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`@media screen and (min-width: 992px)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Active from viewport width 992px and up`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`huge`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1216px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`@media screen and (min-width: 1216px)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Active from viewport width 1216 and up`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`enormous`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1440px`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`@media screen and (min-width: 1440px)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Active from viewport width 1440px and up`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"activebreakpointforsizewidthvalue\"\n    }}><inlineCode parentName=\"h3\">{`activeBreakpointForSize(widthValue)`}</inlineCode></h3>\n    <p><inlineCode parentName=\"p\">{`activeBreakpointForSize`}</inlineCode>{` will return the closest active breakpoint that matches the given width value.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`console.log(activeBreakpointForSize(300));  // 'tiny'\nconsole.log(activeBreakpointForSize(544));  // 'small'\nconsole.log(activeBreakpointForSize(800));  // 'medium'\nconsole.log(activeBreakpointForSize(1000)); // 'large'\nconsole.log(activeBreakpointForSize(1300)); // 'huge'\nconsole.log(activeBreakpointForSize(1500)); // 'enormous'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"isbreakpointactiveforsizebreakpointname-widthvalue\"\n    }}><inlineCode parentName=\"h3\">{`isBreakpointActiveForSize(breakpointName, widthValue)`}</inlineCode></h3>\n    <p><inlineCode parentName=\"p\">{`isBreakpointActiveForSize`}</inlineCode>{` will return a boolean value indicating whether or not the given breakpoint name is active for the width value.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note that since the breakpoints are defined as minimum values, a breakpoint will be determined to be active\nif the width value is larger than the defined minimum, even if the width value is included in a higher breakpoint's range.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`console.log(isBreakpointActiveForSize('tiny', 300));      // true\nconsole.log(isBreakpointActiveForSize('tiny', 544));      // true\nconsole.log(isBreakpointActiveForSize('tiny', 800));      // true\nconsole.log(isBreakpointActiveForSize('tiny', 1000));     // true\n\nconsole.log(isBreakpointActiveForSize('medium', 300));    // false\nconsole.log(isBreakpointActiveForSize('medium', 544));    // false\nconsole.log(isBreakpointActiveForSize('medium', 800));    // true\nconsole.log(isBreakpointActiveForSize('medium', 1500));   // true\n\nconsole.log(isBreakpointActiveForSize('enormous', 300));  // false\nconsole.log(isBreakpointActiveForSize('enormous', 544));  // false\nconsole.log(isBreakpointActiveForSize('enormous', 800));  // false\nconsole.log(isBreakpointActiveForSize('enormous', 1500)); // true\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"media-queries\"\n    }}>{`Media Queries`}</h3>\n    <p><inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{` also provides a set of Sass mixins that define media queries for the supported breakpoints.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import '~terra-application/lib/breakpoints/media-queries';\n\n.example {\n  color: blue;\n\n  @include terra-mq-small-up {\n    color: red;\n  }\n\n  @include terra-mq-medium-up {\n    color: purple;\n  }\n\n  @include terra-mq-large-up {\n    color: green;\n  }\n\n  @include terra-mq-huge-up {\n    color: yellow;\n  }\n\n  @include terra-mq-enormous-up {\n    color: orange;\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}