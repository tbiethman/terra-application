(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{1e3:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return d}));var o=t(17),a=t.n(o),c=t(24),i=t.n(c),r=(t(0),t(279)),p={};function d(e){var n=e.components,t=i()(e,["components"]);return Object(r.mdx)("wrapper",a()({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"activebreakpointcontext"},"ActiveBreakpointContext"),Object(r.mdx)("p",null,"The ActiveBreakpointContext defines an interface for access to the framework's determined active breakpoint based on the current window size."),Object(r.mdx)("blockquote",null,Object(r.mdx)("p",{parentName:"blockquote"},"Note: An ActiveBreakpointContext.Provider is rendered by ",Object(r.mdx)("a",a()({parentName:"p"},{href:"/terra-application/components/terra-application/application/reference/components/application-base"}),"ApplicationBase"),".\nAny components rendered within ApplicationBase can access an ActiveBreakpointContext value without rendering additional providers.")),Object(r.mdx)("h2",{id:"context-value"},"Context Value"),Object(r.mdx)("pre",null,Object(r.mdx)("code",a()({parentName:"pre"},{className:"language-jsx"}),"const contextShape = PropTypes.oneOf(['tiny', 'small', 'medium', 'large', 'huge', 'enormous']);\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=77-56e690c60c16ff86e2e4.js.map