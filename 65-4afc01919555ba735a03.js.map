{"version":3,"sources":["webpack:///./lib/terra-dev-site/app/how-to.3/change-application-theme.app.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gMAYMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,cALS,UAKT,OAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,uCADR,uCAGA,iEAA8C,4BAAYC,WAAW,KAAvB,aAA9C,iCAAqI,4BAAYA,WAAW,KAAvB,aAArI,mDACA,4BAAS,4BAAYA,WAAW,KAAvB,yBAAT,2DAAsI,uBAAGA,WAAW,KAAQ,CACxJ,KAAQ,+DAD0H,wBAAtI,0DAGA,yBAAK,0BAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gRAiBTJ,EAAWK,gBAAiB","file":"65-4afc01919555ba735a03.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"how-to-change-the-application-theme\"\n    }}>{`How To Change the Application Theme`}</h1>\n    <p>{`The application theme is set using the `}<inlineCode parentName=\"p\">{`themeName`}</inlineCode>{` prop in ApplicationBase. The `}<inlineCode parentName=\"p\">{`themeName`}</inlineCode>{` is used as the class name for applying styles.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`terra-theme.config.js`}</inlineCode>{` file must be available to enable themes. Check out the `}<a parentName=\"p\" {...{\n        \"href\": \"/terra-application/guides/terra-application/theme-strategy\"\n      }}>{`theme strategy guide`}</a>{` for more information about using and applying themes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`  import React from 'react';\n  import ApplicationBase from 'terra-application/lib/application-base';\n\n  const ExampleApp = () => (\n    <ApplicationBase themeName=\"example-theme-name\">\n      {...}\n    </ApplicationBase>\n  );\n\n  export default ExampleApp;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}