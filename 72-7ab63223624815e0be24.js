(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{1005:function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return l}));var t=a(17),o=a.n(t),i=a(24),p=a.n(i),r=(a(0),a(279)),c={};function l(e){var n=e.components,a=p()(e,["components"]);return Object(r.mdx)("wrapper",o()({},c,a,{components:n,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"how-to-show-loading-overlays"},"How To Show Loading Overlays"),Object(r.mdx)("p",null,"Loading overlays can be rendered within the framework by rendering an ",Object(r.mdx)("a",o()({parentName:"p"},{href:"/tbiethman/terra-application/components/terra-application/application/reference/components/application-loading-overlay"}),"ApplicationLoadingOverlay")," component. Overlays will be rendered by the closest ancestor ",Object(r.mdx)("a",o()({parentName:"p"},{href:"/tbiethman/terra-application/components/terra-application/application/reference/components/application-loading-overlay"}),"ApplicationLoadingOverlayProvider"),". All content rendered within the responsding ApplicationLoadingOverlayProvider will be overlaid."),Object(r.mdx)("pre",null,Object(r.mdx)("code",o()({parentName:"pre"},{className:"language-jsx"}),"import React, { useState } from 'react';\nimport ApplicationLoadingOverlay from 'terra-application/lib/application-loading-overlay';\n\nconst ExampleComponent = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <div>\n      <p>This component toggles a loading state that lasts for 3 seconds.</p>\n      <p>\n        <button type=\"button\" onClick={() => {\n          setIsLoading(true);\n\n          setTimeout(() => {\n            setIsLoading(false);\n          }, 3000);\n        }}>\n          Start Loading\n        </button>\n      </p>\n      <ApplicationLoadingOverlay isOpen={isLoading} />\n    </div>\n  );\n};\n\nexport default ExampleComponent;\n")),Object(r.mdx)("p",null,"Any component that wants to create an overlay container for its children can render its own ",Object(r.mdx)("a",o()({parentName:"p"},{href:"/tbiethman/terra-application/components/terra-application/application/reference/components/application-loading-overlay"}),"ApplicationLoadingOverlayProvider")," to scope overlay presentation to that container."),Object(r.mdx)("blockquote",null,Object(r.mdx)("p",{parentName:"blockquote"},"Note: ApplicationLoadingOverlayProviders are provided by ",Object(r.mdx)("a",o()({parentName:"p"},{href:"/tbiethman/terra-application/components/terra-application/application/reference/components/application-base"}),"ApplicationBase"),", ",Object(r.mdx)("a",o()({parentName:"p"},{href:"/tbiethman/terra-application/components/terra-application/application/reference/components/modal-manager"}),"ModalManager"),", and the ",Object(r.mdx)("a",o()({parentName:"p"},{href:"/tbiethman/terra-application/components/terra-application/application/reference/components/slide-panel-manager"}),"SlidePanelManager"),".")))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=72-7ab63223624815e0be24.js.map